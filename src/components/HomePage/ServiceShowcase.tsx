import React, { useState } from 'react';

interface ServiceCardProps {
  icon: string;
  title: string;
  description: string;
}

const ServiceCard: React.FC<ServiceCardProps> = ({ icon, title, description }) => {
  const [isHovered, setIsHovered] = useState(false);

  const cardStyles = {
    card: {
      backgroundColor: isHovered ? '#e0e0e0' : '#f8f9fa',
      borderRadius: '8px',
      padding: '30px',
      boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
      transition: 'transform 0.3s ease, background-color 0.3s ease',
      transform: isHovered ? 'scale(1.05)' : 'scale(1)',
    },
    icon: {
      fontSize: '3rem',
      marginBottom: '20px',
    },
    title: {
      fontSize: '1.5rem',
      marginBottom: '15px',
      color: '#333',
    },
    description: {
      fontSize: '1rem',
      color: '#666',
      lineHeight: 1.6,
    },
  };

  return (
    <div 
      style={cardStyles.card}
      onMouseEnter={() => setIsHovered(true)}
      onMouseLeave={() => setIsHovered(false)}
    >
      <div style={cardStyles.icon}>{icon}</div>
      <h3 style={cardStyles.title}>{title}</h3>
      <p style={cardStyles.description}>{description}</p>
    </div>
  );
};

const ServiceShowcase: React.FC = () => {
  const styles = {
    showcaseContainer: {
      fontFamily: 'Arial, sans-serif',
      maxWidth: '1200px',
      margin: '0 auto',
      padding: '40px 20px',
      textAlign: 'center' as const,
      direction: 'rtl' as const,
    },
    heading: {
      fontSize: '2.5rem',
      marginBottom: '40px',
      color: '#333',
    },
    serviceGrid: {
      display: 'grid',
      gridTemplateColumns: 'repeat(auto-fit, minmax(250px, 1fr))',
      gap: '30px',
      marginBottom: '40px',
    },
    socialLinks: {
      display: 'flex',
      justifyContent: 'center',
      gap: '20px',
    },
    socialLink: {
      textDecoration: 'none',
      color: '#007bff',
      fontSize: '1.1rem',
      transition: 'color 0.3s ease',
    },
  };

  return (
    <section style={styles.showcaseContainer}>
      <h2 style={styles.heading}>◊î◊©◊ô◊®◊ï◊™◊ô◊ù ◊©◊ú◊†◊ï</h2>
      <div style={styles.serviceGrid}>
        <ServiceCard icon="üé•" title="◊î◊°◊®◊ò◊ï◊†◊ô◊ù ◊©◊ú◊ô" description="◊¶◊§◊ï ◊ë◊™◊ï◊õ◊ü ◊ï◊ô◊ì◊ê◊ï ◊û◊ß◊¶◊ï◊¢◊ô ◊ï◊û◊®◊™◊ß ◊©◊ô◊¢◊©◊ô◊® ◊ê◊™ ◊î◊ô◊ì◊¢ ◊©◊ú◊õ◊ù" />
        <ServiceCard icon="üì∏" title="◊ê◊ô◊†◊°◊ò◊í◊®◊ù" description="◊™◊û◊ï◊†◊ï◊™ ◊ï◊°◊ò◊ï◊®◊ô◊ñ ◊û◊¢◊ï◊®◊®◊ô ◊î◊©◊®◊ê◊î ◊©◊ô◊¢◊¶◊ô◊û◊ï ◊ê◊™ ◊î◊†◊ï◊õ◊ó◊ï◊™ ◊©◊ú◊õ◊ù ◊ë◊®◊©◊™" />
        <ServiceCard icon="üîç" title="◊ß◊ô◊ì◊ï◊ù ◊ê◊™◊®◊ô◊ù" description="SEO ◊û◊™◊ß◊ì◊ù ◊ú◊î◊í◊ì◊ú◊™ ◊î◊ó◊©◊ô◊§◊î ◊ï◊ú◊î◊ï◊ë◊ú◊™ ◊î◊¢◊°◊ß ◊©◊ú◊õ◊ù ◊ú◊§◊°◊í◊î" />
        <ServiceCard icon="‚≠ê" title="◊ë◊ô◊ß◊ï◊®◊ï◊™" description="◊í◊ú◊ï ◊û◊î ◊ú◊ß◊ï◊ó◊ï◊™ ◊û◊®◊ï◊¶◊ô◊ù ◊ê◊ï◊û◊®◊ô◊ù ◊¢◊ú ◊î◊©◊ô◊®◊ï◊™◊ô◊ù ◊©◊ú◊†◊ï" />
      </div>
     
    </section>
  );
};

export default ServiceShowcase;